-- Roblox Executor UI Script
-- Modified with transparent textboxes, background image, and RemoteSpy button

local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local CloseButton = Instance.new("TextButton")
local MinimizeButton = Instance.new("TextButton")
local TweenService = game:GetService("TweenService")

-- Setup UI properties
ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.Name = "ExecutorUI"
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
MainFrame.Size = UDim2.new(0, 600, 0, 400)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.ClipsDescendants = true -- Prevent content from showing outside frame

-- Add background image
local BackgroundImage = Instance.new("ImageLabel")
BackgroundImage.Name = "BackgroundImage"
BackgroundImage.Parent = MainFrame
BackgroundImage.BackgroundTransparency = 1
BackgroundImage.Size = UDim2.new(1, 0, 1, 0)
BackgroundImage.Image = "rbxassetid://18137921500"
BackgroundImage.ScaleType = Enum.ScaleType.Stretch
BackgroundImage.ZIndex = 1

-- Add rounded corners
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = MainFrame

Title.Name = "Title"
Title.Parent = MainFrame
Title.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Title.BackgroundTransparency = 0.3
Title.BorderSizePixel = 0
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Font = Enum.Font.SourceSansBold
Title.Text = "Skibidiscripts"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 18.000
Title.ZIndex = 2

-- Rounded corners for title bar
local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 10)
TitleCorner.Parent = Title

CloseButton.Name = "CloseButton"
CloseButton.Parent = Title
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(1, -25, 0, 5)
CloseButton.Size = UDim2.new(0, 20, 0, 20)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 14.000
CloseButton.ZIndex = 3

-- Rounded corners for close button
local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 10)
CloseCorner.Parent = CloseButton

MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Parent = Title
MinimizeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Position = UDim2.new(1, -50, 0, 5)
MinimizeButton.Size = UDim2.new(0, 20, 0, 20)
MinimizeButton.Font = Enum.Font.SourceSansBold
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 14.000
MinimizeButton.ZIndex = 3

-- Rounded corners for minimize button
local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 10)
MinimizeCorner.Parent = MinimizeButton

-- Add RemoteSpy button
local RemoteSpyButton = Instance.new("TextButton")
RemoteSpyButton.Name = "RemoteSpyButton"
RemoteSpyButton.Parent = MainFrame
RemoteSpyButton.BackgroundColor3 = Color3.fromRGB(80, 45, 150)
RemoteSpyButton.BorderSizePixel = 0
RemoteSpyButton.Position = UDim2.new(0, 10, 0, 365)
RemoteSpyButton.Size = UDim2.new(0, 120, 0, 25)
RemoteSpyButton.Font = Enum.Font.SourceSansBold
RemoteSpyButton.Text = "Load RemoteSpy"
RemoteSpyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
RemoteSpyButton.TextSize = 14.000
RemoteSpyButton.ZIndex = 3

-- Rounded corners for RemoteSpy button
local RemoteSpyCorner = Instance.new("UICorner")
RemoteSpyCorner.CornerRadius = UDim.new(0, 8)
RemoteSpyCorner.Parent = RemoteSpyButton

-- Animation settings
local minimizedSize = UDim2.new(0, 600, 0, 30)
local expandedSize = UDim2.new(0, 600, 0, 400)
local animationDuration = 0.3
local animationEasingStyle = Enum.EasingStyle.Quad
local animationEasingDirection = Enum.EasingDirection.Out

-- Store loop status for each code box
local loopStatus = {false, false, false, false}
local loopConnections = {nil, nil, nil, nil}

-- Function to update loop button appearance
local function updateLoopButton(button, status)
    if status then
        button.BackgroundColor3 = Color3.fromRGB(0, 170, 0) -- Green when active
        button.Text = "Looping"
    else
        button.BackgroundColor3 = Color3.fromRGB(100, 100, 100) -- Gray when inactive
        button.Text = "Loop"
    end
end

-- Function to execute code
local function executeCode(codeBox, index)
    local success, error = pcall(function()
        local code = codeBox.Text
        loadstring(code)()
    end)
    
    if not success then
        warn("Execution error: " .. tostring(error))
    end
end

-- Function to toggle loop execution
local function toggleLoop(codeBox, button, index)
    loopStatus[index] = not loopStatus[index]
    updateLoopButton(button, loopStatus[index])
    
    if loopStatus[index] then
        -- Start the loop
        loopConnections[index] = game:GetService("RunService").Heartbeat:Connect(function()
            executeCode(codeBox, index)
        end)
    else
        -- Stop the loop
        if loopConnections[index] then
            loopConnections[index]:Disconnect()
            loopConnections[index] = nil
        end
    end
end

-- Function to create a code frame
local function createCodeFrame(index, yPos)
    local codeFrame = Instance.new("Frame")
    codeFrame.Name = "CodeFrame" .. index
    codeFrame.Parent = MainFrame
    codeFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    codeFrame.BackgroundTransparency = 0.3  -- Make frames semi-transparent
    codeFrame.BorderSizePixel = 0
    codeFrame.Position = UDim2.new(0, 10, 0, yPos)
    codeFrame.Size = UDim2.new(0, 580, 0, 80)
    codeFrame.ZIndex = 2
    
    -- Rounded corners for code frame
    local CodeFrameCorner = Instance.new("UICorner")
    CodeFrameCorner.CornerRadius = UDim.new(0, 8)
    CodeFrameCorner.Parent = codeFrame
    
    -- Create scrolling frame for text entry
    local ScrollingFrame = Instance.new("ScrollingFrame")
    ScrollingFrame.Name = "ScrollingFrame" .. index
    ScrollingFrame.Parent = codeFrame
    ScrollingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    ScrollingFrame.BackgroundTransparency = 0.5  -- Make scrolling frame semi-transparent
    ScrollingFrame.BorderSizePixel = 0
    ScrollingFrame.Position = UDim2.new(0, 5, 0, 5)
    ScrollingFrame.Size = UDim2.new(0, 500, 0, 70)
    ScrollingFrame.ScrollBarThickness = 5
    ScrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    ScrollingFrame.ClipsDescendants = true
    ScrollingFrame.ZIndex = 3
    
    -- Add rounded corners to scrolling frame
    local ScrollingCorner = Instance.new("UICorner")
    ScrollingCorner.CornerRadius = UDim.new(0, 6)
    ScrollingCorner.Parent = ScrollingFrame
    
    -- Create text box inside scrolling frame - MADE TRANSPARENT
    local codeBox = Instance.new("TextBox")
    codeBox.Name = "CodeBox" .. index
    codeBox.Parent = ScrollingFrame
    codeBox.BackgroundTransparency = 1  -- Make fully transparent
    codeBox.Size = UDim2.new(1, -10, 1, 0)
    codeBox.Position = UDim2.new(0, 5, 0, 0)
    codeBox.Font = Enum.Font.Code
    codeBox.PlaceholderText = "Enter Lua code here..."
    codeBox.PlaceholderColor3 = Color3.fromRGB(200, 200, 200)
    codeBox.Text = ""
    codeBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    codeBox.TextSize = 14.000
    codeBox.ClearTextOnFocus = false
    codeBox.TextXAlignment = Enum.TextXAlignment.Left
    codeBox.TextYAlignment = Enum.TextYAlignment.Top
    codeBox.MultiLine = true
    codeBox.ZIndex = 4
    
    -- Auto-resize canvas based on text content
    codeBox.Changed:Connect(function(prop)
        if prop == "Text" or prop == "TextBounds" then
            -- Add some padding to ensure text isn't cut off
            local textHeight = codeBox.TextBounds.Y + 20
            ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, math.max(textHeight, 70))
        end
    end)
    
    local executeButton = Instance.new("TextButton")
    executeButton.Name = "ExecuteButton" .. index
    executeButton.Parent = codeFrame
    executeButton.BackgroundColor3 = Color3.fromRGB(45, 90, 150)
    executeButton.BorderSizePixel = 0
    executeButton.Position = UDim2.new(0, 510, 0, 5)
    executeButton.Size = UDim2.new(0, 65, 0, 35)
    executeButton.Font = Enum.Font.SourceSansBold
    executeButton.Text = "Execute"
    executeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    executeButton.TextSize = 14.000
    executeButton.ZIndex = 3
    
    -- Rounded corners for execute button
    local ExecuteCorner = Instance.new("UICorner")
    ExecuteCorner.CornerRadius = UDim.new(0, 8)
    ExecuteCorner.Parent = executeButton
    
    executeButton.MouseButton1Click:Connect(function()
        executeCode(codeBox, index)
    end)
    
    local loopToggle = Instance.new("TextButton")
    loopToggle.Name = "LoopToggle" .. index
    loopToggle.Parent = codeFrame
    loopToggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    loopToggle.BorderSizePixel = 0
    loopToggle.Position = UDim2.new(0, 510, 0, 40)
    loopToggle.Size = UDim2.new(0, 65, 0, 35)
    loopToggle.Font = Enum.Font.SourceSansBold
    loopToggle.Text = "Loop"
    loopToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    loopToggle.TextSize = 14.000
    loopToggle.ZIndex = 3
    
    -- Rounded corners for loop toggle button
    local LoopCorner = Instance.new("UICorner")
    LoopCorner.CornerRadius = UDim.new(0, 8)
    LoopCorner.Parent = loopToggle
    
    loopToggle.MouseButton1Click:Connect(function()
        toggleLoop(codeBox, loopToggle, index)
    end)
    
    return codeFrame, codeBox, executeButton, loopToggle
end

-- Create the 4 code input areas
createCodeFrame(1, 40)
createCodeFrame(2, 130)
createCodeFrame(3, 220)
createCodeFrame(4, 310)

-- Make UI draggable
local UserInputService = game:GetService("UserInputService")
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Add event handlers for buttons
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
    -- Clean up all loop connections
    for i = 1, 4 do
        if loopConnections[i] then
            loopConnections[i]:Disconnect()
        end
    end
end)

-- Add RemoteSpy button click handler
RemoteSpyButton.MouseButton1Click:Connect(function()
    loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/78n/SimpleSpy/main/SimpleSpyBeta.lua"))()
end)

local isMinimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    local targetSize = isMinimized and minimizedSize or expandedSize
    
    -- Create the animation
    local animationInfo = TweenInfo.new(
        animationDuration,
        animationEasingStyle,
        animationEasingDirection
    )
    
    local tween = TweenService:Create(MainFrame, animationInfo, {Size = targetSize})
    tween:Play()
end)

-- Add hover effects for buttons
local function createButtonHoverEffect(button, normalColor, hoverColor)
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = hoverColor
    end)
    
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = normalColor
    end)
end

createButtonHoverEffect(CloseButton, Color3.fromRGB(200, 50, 50), Color3.fromRGB(255, 70, 70))
createButtonHoverEffect(MinimizeButton, Color3.fromRGB(60, 60, 60), Color3.fromRGB(100, 100, 100))
createButtonHoverEffect(RemoteSpyButton, Color3.fromRGB(80, 45, 150), Color3.fromRGB(120, 70, 200))

-- Print confirmation message
print("Modified Executor UI has been loaded with background image and RemoteSpy button.")
